name: Release

on:
  push:
    branches:
      - master
    tags:
      - "v*.*.*"

jobs:
  release-binary:
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'
    timeout-minutes: 15
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout tags
        run: git fetch --force --tags

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          check-latest: true

      - name: Install cosign
        uses: sigstore/cosign-installer@main

      - name: Build and release with goreleaser
        uses: goreleaser/goreleaser-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          distribution: goreleaser
          version: latest
          args: release

  release-image:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      id-token: write
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install cosign
        uses: sigstore/cosign-installer@v3

      - name: Install Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Build list of Docker tags to use
        id: tag-types
        run: |
          if [[ ${{ contains(github.ref, 'tag') }} == true ]]; then
            TAGS="
            type=semver,pattern={{major}},priority=920
            type=semver,pattern={{major}}.{{minor}},priority=910
            type=semver,pattern={{version}},priority=900
            type=ref,event=branch
            type=sha,format=long"
          else
            TAGS="
            type=ref,event=branch
            type=sha,format=long"
          fi

          # https://trstringer.com/github-actions-multiline-strings
          {
            echo "TAGS<<EOF"
            echo "$TAGS"
            echo "EOF"
          } >> "$GITHUB_ENV"

      - name: Set Docker labels and tags
        id: metadata
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          flavor: |
            latest=true
          tags: ${{ env.TAGS }}

      - name: Login to container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get latest git tag
        id: get-tag
        uses: olegtarasov/get-tag@v2.1

      - name: Set build arguments
        id: build-args
        run: |
          VERSION=${{ steps.get-tag.outputs.tag }}
          if [[ -z ${VERSION} ]]; then
            VERSION=devel
          fi
          echo "version=${VERSION}" >> "${GITHUB_OUTPUT}"

      - name: Build and push Docker image
        id: build-push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          build-args: |
            VERSION=${{ steps.build-args.outputs.version }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}

      - name: Sign container image
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: cosign sign --yes ghcr.io/${{ github.repository }}@${{ steps.build-push.outputs.digest }}

      - name: Scan container image for vulnerabilities
        uses: chainguard-images/actions/vul-scans@main
        with:
          image: ghcr.io/${{ github.repository }}@${{ steps.build-push.outputs.digest }}
          RUN_SNYK: false
