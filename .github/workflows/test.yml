name: Test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - "*"

  workflow_dispatch: {}

jobs:
  race-test:
    # required for nftables to work correctly
    # TODO: change to "ubuntu-latest" when 22.04 is the latest
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Export constant environmental variables
        uses: cardinalby/export-env-action@v2
        with:
          envFile: .github/workflows/constants.env

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}.x
          check-latest: true
          cache: true

      # the test is compiled and run as root so that whalewall can
      # interface with nftables, which is a privileged operation
      - run: |
          go test -c -race -o whalewall.test
          sudo ./whalewall.test -test.timeout 5m -test.v

  binary-test:
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Export constant environmental variables
        uses: cardinalby/export-env-action@v2
        with:
          envFile: .github/workflows/constants.env

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}.x
          check-latest: true
          cache: true

      # run the same tests as above but use a binary to create rules
      # to test with landlock and seccomp filters active
      - run: |
          cd cmd/whalewall
          CGO_ENABLED=0 go build -o ../../whalewall
          cd ../../
          go test -c -o whalewall.test
          sudo ./whalewall.test -binary-tests -test.timeout 5m -test.v

  image-test:
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Export constant environmental variables
        uses: cardinalby/export-env-action@v2
        with:
          envFile: .github/workflows/constants.env

      - name: Install Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Ensure Docker image builds
        uses: docker/build-push-action@v4
        with:
          load: true
          push: false
          tags: whalewall:test

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}.x
          check-latest: true
          cache: true

      # run the same tests as above but use a container to create rules
      # to test with landlock and seccomp filters active
      - run: |
          go test -c -o whalewall.test
          sudo ./whalewall.test -container-tests -test.timeout 5m -test.v
